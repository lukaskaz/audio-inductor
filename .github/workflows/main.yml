name: Check build/run/tests

on:
  push:
    branches: [main]
  pull_request:
      # as by default
      types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checking out
      uses: actions/checkout@v4
    - name: Setting up dependencies
      run: |
        sudo apt install libboost-filesystem-dev 
        sudo apt install build-essential libfftw3-dev libasound2-dev \
          libpulse-dev libtool automake libiniparser-dev libsdl2-2.0-0 \
          libsdl2-dev libpipewire-0.3-dev libjack-jackd2-dev pkgconf
        git clone https://github.com/WiringPi/WiringPi.git
        cd WiringPi && ./build debian && mv debian-template/wiringpi*.deb .
        sudo apt install ./wiringpi*.deb
    - name: Building application
      run: |
        mkdir build && cd build && cmake .. && make
      
  execution:
    name: Execution
    needs: [build]
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checking out
      uses: actions/checkout@v4
    - name: Setting up dependencies
      run: |
        sudo apt install libboost-filesystem-dev
        sudo apt install build-essential libfftw3-dev libasound2-dev \
          libpulse-dev libtool automake libiniparser-dev libsdl2-2.0-0 \
          libsdl2-dev libpipewire-0.3-dev libjack-jackd2-dev pkgconf
        git clone https://github.com/WiringPi/WiringPi.git
        cd WiringPi && ./build debian && mv debian-template/wiringpi*.deb .
        sudo apt install ./wiringpi*.deb
    - name: Building application
      run: |
        mkdir build && cd build && cmake .. && make
    - name: Running audioinductor program
      run: echo "Running app"

  test:
    name: Tests
    runs-on: ubuntu-latest
    environment: test

    steps:
    - name: Checking out
      uses: actions/checkout@v4
    - name: Building tests
      run: |
        cd tests
        mkdir build && cd build && cmake .. && make
    - name: Running tests
      run: |
        ctest --output-on-failure --test-dir tests/build/

